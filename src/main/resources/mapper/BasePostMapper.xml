<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hema.newretail.backstage.dao.BasePostMapper" >
  <resultMap id="BaseResultMap" type="com.hema.newretail.backstage.entry.BasePost" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="post_name" property="postName" jdbcType="VARCHAR" />
    <result column="post_desc" property="postDesc" jdbcType="VARCHAR" />
    <result column="gmt_create" property="gmtCreate" jdbcType="TIMESTAMP" />
    <result column="gmt_modified" property="gmtModified" jdbcType="TIMESTAMP" />
    <result column="is_deleted" property="isDeleted" jdbcType="BIT" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, post_name, post_desc, gmt_create, gmt_modified, is_deleted
  </sql>
  <select id="selectAll" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from base_post
    where  is_deleted = 0
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from base_post
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from base_post
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.hema.newretail.backstage.entry.BasePost" >
    insert into base_post (id, post_name, post_desc, 
      gmt_create, gmt_modified, is_deleted
      )
    values (#{id,jdbcType=BIGINT}, #{postName,jdbcType=VARCHAR}, #{postDesc,jdbcType=VARCHAR}, 
      #{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModified,jdbcType=TIMESTAMP}, #{isDeleted,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hema.newretail.backstage.entry.BasePost" >
    insert into base_post
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="postName != null" >
        post_name,
      </if>
      <if test="postDesc != null" >
        post_desc,
      </if>
      <if test="gmtCreate != null" >
        gmt_create,
      </if>
      <if test="gmtModified != null" >
        gmt_modified,
      </if>
      <if test="isDeleted != null" >
        is_deleted,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="postName != null" >
        #{postName,jdbcType=VARCHAR},
      </if>
      <if test="postDesc != null" >
        #{postDesc,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        #{isDeleted,jdbcType=BIT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hema.newretail.backstage.entry.BasePost" >
    update base_post
    <set >
      <if test="postName != null" >
        post_name = #{postName,jdbcType=VARCHAR},
      </if>
      <if test="postDesc != null" >
        post_desc = #{postDesc,jdbcType=VARCHAR},
      </if>
      <if test="gmtCreate != null" >
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModified != null" >
        gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      </if>
      <if test="isDeleted != null" >
        is_deleted = #{isDeleted,jdbcType=BIT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hema.newretail.backstage.entry.BasePost" >
    update base_post
    set post_name = #{postName,jdbcType=VARCHAR},
      post_desc = #{postDesc,jdbcType=VARCHAR},
      gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modified = #{gmtModified,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectPostByCondition" resultMap="BaseResultMap">
    select * from base_post as p where p.is_deleted=0 order by p.gmt_create desc
  </select>
  <select id="selectPostExistByPostName" parameterType="java.lang.String" resultType="java.lang.Integer">
    select count(p.id) as num from base_post as p where p.post_name=#{postName}
  </select>
</mapper>